const express = require('express');  
const axios = require('axios');  
const bodyParser = require('body-parser');  
const path = require('path'); // Importar el módulo path  

const app = express();  
const PORT = 3000;  

// Middleware para parsear el cuerpo de las solicitudes  
app.use(bodyParser.json());  
app.use(bodyParser.urlencoded({ extended: true }));  

// Servir archivos estáticos (HTML, CSS, JS)  
app.use(express.static(path.join(__dirname))); // Servir archivos en la raíz del proyecto  

// Ruta para manejar la verificación de pagos  
app.put('/lnurlp/api/v1/links/:pay_id', async (req, res) => {  
    const payId = req.params.pay_id; // Obtener el pay_id de los parámetros de la URL  
    const { description, amount } = req.body; // Obtener el cuerpo de la solicitud  

    // Asegúrate de que se proporcionen los datos necesarios  
    if (!description || !amount) {  
        return res.status(400).json({ error: 'Faltan description o amount' });  
    }  

    try {  
        // Realizar la solicitud PUT a la API LNURL  
        const response = await axios.put(`https://demo.lnbits.com/lnurlp/api/v1/links/${payId}`, {  
            description,  
            amount  
        }, {  
            headers: {  
                'Content-Type': 'application/json',  
                'X-Api-Key': 'ba2b550006a84befb4b3edec61f04272' // Reemplaza con tu clave de API  
            }  
        });  

        // Devolver la respuesta de la API  
        res.status(200).json(response.data);  
    } catch (error) {  
        console.error(error);  
        res.status(500).json({ error: 'Error al realizar la solicitud a la API LNURL' });  
    }  
});  

// Ruta para verificar el estado del pago  
app.get('/verificar-pago/:pay_id', async (req, res) => {  
    const payId = req.params.pay_id; // Obtener el pay_id de los parámetros de la URL  

    try {  
        // Realizar la solicitud GET a la API LNURL para verificar el estado del pago  
        const response = await axios.get(`https://demo.lnbits.com/lnurlp/api/v1/links/${payId}`, {  
            headers: {  
                'X-Api-Key': 'ba2b550006a84befb4b3edec61f04272' // Reemplaza con tu clave de API  
            }  
        });  

        // Devolver la respuesta de la API  
        res.status(200).json(response.data);  
    } catch (error) {  
        console.error(error);  
        res.status(500).json({ error: 'Error al verificar el estado del pago' });  
    }  
});  

// Iniciar el servidor  
app.listen(PORT, () => {  
    console.log(`Servidor escuchando en http://localhost:${PORT}`);  
});
